
<% # MATCH HISTORY - SUPPORT FUNCTIONS %>
<%

	def translated_server_name(server)
		# If the name is in the hash (for Russian servers), return
		# the field belonging to the key.  Otherwise, just lowercase
		# the server name and replace spaces with dashes.
		servers = {
			"Азурегос" => "azuregos",
			"ВечнаяПесня" => "eversong",
			"Дракономор" => "fordragon",
			"Галакронд" => "galakrond",
			"Голдринн" => "goldrinn",
			"Гром" => "grom",
			"Корольлич" => "lich-king",			
			"Пиратскаябухта" => "booty-bay",  # guess
			"Подземье" => "deephome",
			"Разувий" => "razuvious",
			"Ревущийфьорд" => "howling-fjord",
			"СвежевательДуш" => "soulflayer",
			"Седогрив" => "greymane",
			"СтражСмерти" => "deathguard",
			"Термоштепсель" => "thermaplugg",
			"ТкачСмерти" => "deathweaver",  # guess
			"ЧерныйШрам" => "blackscar",
			"Ясеневыйлес" => "ashenvale",
			"Ahn'Qiraj" => "ahnqiraj",
			"Aman'Thul" => "amanthul",
			"Area52" => "area-52",
			"ArgentDawn" => "argent-dawn",
			"AzjolNerub" => "azjol-nerub",
			"BurningBlade" => "burning-blade",
			"BurningLegion" => "burning-legion",
			"C'Thun" => "cthun",
			"ChamberofAspects" => "chamber-of-aspects",
			"Chantséternels" => "chants-eternels",
			"Cho’gall" => "chogall",
			"CultedelaRivenoire" => "culte-de-la-rive-noire",
			"DarkmoonFaire" => "darkmoon-faire",	
			"DefiasBrotherhood" => "defias-brotherhood",
			"DieNachtwache" => "die-nachtwache",		
			"DieArguswacht" => "die-arguswacht",	
			"Drak'thul" => "drakthul",
			"DunModr" => "dun-modr",
			"EmeraldDream" => "emerald-dream",
			"Eldre'Thalas" => "eldrethalas",
			"Kil'jaeden" => "kiljaeden",
			"KultderVerdammten" => "kult-der-verdammten",
			"KulTiras" => "kul-tiras",
			"KhazModan" => "khaz-modan",
			"LaCroisadeécarlate" => "la-croisade-ecarlate",
			"LosErrantes" => "los-errantes",
			"Mal'Ganis" => "malganis",
			"Pozzodell'Eternità" => "pozzo-delleternita",
			"Quel'Thalas" => "quelthalas",
			"ScarshieldLegion" => "scarshield-legion",
			"ShatteredHalls" => "shattered-halls",
			"ShatteredHand" => "shattered-hand",
			"TarrenMill" => "tarren-mill",
			"TheMaelstrom" => "the-maelstrom",
			"Twilight'sHammer" => "twilights-hammer",
			"TwistingNether" => "twisting-nether",
			"Zul'jin" => "zuljin",			 
			"GrimBatol" => "grim-batol"}
		
		return servers.has_key?(server) ? servers[server] : server.downcase.gsub(' ', '-')
		
	end

    def get_pvp_url(player_id)
		name = Player.find(player_id).name
		server_name = Player.find(player_id).server_name
		pvp_url = "http://eu.battle.net/wow/en/character/" + translated_server_name(server_name) + "/" +
		name + "/pvp#bgs"
			
		return pvp_url
	end
	
	def get_match_length(match)
		length = (match.match_end - match.match_start)
	end
	
	def get_death_times(match)
		length = (match.match_end - match.match_start)
	end
	
%>


<h1>Match History</h1>

Showing <%= @matches.count %> total matches

<%# For each match we will have two tables - a plain top table %>
<%# showing the basic match information, and underneath that, %>
<%# a table with the scores and any information associated with %>
<%# a specific player. %>
<%##################################################%>
<%# FOR EVERY MATCH 								%>
<%##################################################%>
<% @matches.each do |match| %>
<%# Here's the general match information table . . . %>
<table>
  <tbody> 
      <tr>		
        <td><br>
			<b><%= match.arena_name %></b> - <%= match.date_time %><br>            
			Match time (MM:SS): <%= Time.at(get_match_length(match)).utc.strftime("%M:%S") %><br>
			<%= match.death_times.split(',').uniq.join(", ") %><br>
			<% if match.mmr_list.length > 1 %>
			Approximate MMR:<% mmr_list = match.mmr_list
				mmr_list[0] = '' %>
			<%= mmr_list.split(",").map(&:to_i).instance_eval { reduce(:+) / size.to_f.round } %>			
		<% else %>
			Skirmish
		<% end %> </td>
      </tr>
  </tbody>
</table>


<%# Here are the scores and personal information . . . %>
<table class="general">
  <thead>
    <tr class="head">
	  <th>&nbsp;</th>
      <th>Player</th>
	  <th>Class</th>
      <th>Spec</th>
      <th>KB</th>
	  <th>Damage</th>
	  <th>Healing</th>
	  <th>Rating Chg</th>      
    </tr>
  </thead>
  <tbody>
 
	<%##################################################%>
	<%# FOR EVERY SCORE 								%>
	<%##################################################%>
		
   <% match.scores.each do |score|
		# Grab out the personal match data associated with the score.
		pmi = PersonalMatchInfo.find_by(match_id: match.id, player_id: score.player_id)
		if pmi
			talents = pmi.talents 
			glyphs =  pmi.glyphs 
			!pmi.note.nil? ? note = pmi.note.split(/\^\^\^/)[0] : note = ""
		end # end if there is personal match info for a player.		
		
		# If it's a winning score, style the row.
		if score.player_faction == match.winning_faction 
		   winner_text = "W" %>
		  <tr class="win">
		<% else %>
		  <tr>
		<% end %>	
			<td><%= winner_text %></td>			
			<td><a href="<%= get_pvp_url(score.player_id) %>"><%= Player.find(score.player_id).name %>-<%= Player.find(score.player_id).server_name %></td>
			<td><%= Player.find(score.player_id).class_name %></td>
			<td><%= Player.find(score.player_id).spec_name %></td>
			<td><%= score.killing_blows %></td>		
			<td  ><%= number_with_precision(score.damage_done, :precision => 0, :delimiter => ',') %></td>		
			<td  align="right"><%= number_with_precision(score.healing_done, :precision => 0, :delimiter => ',') %></td>		
			<td  align="right"><%= score.ratings_adjustment %></td>		
		</tr>		
	<% if pmi %>
		<% if winner_text == "W" %>
			  <tr class="win">
			<% else %>
			  <tr>
			<% end %>			
				<td></td>		
				<td colspan ="8">
					<ul><font size="1">
					  <% if note != "" %>
						<li><%= note %></li>
					  <% end %>
					  <li><%= talents %></li>
					  <li><%= glyphs %></li>
					  </font></ul></td>
			</tr>
	<% end %>
	<% end %> <!-- End for each score -->		
		

    <% end %>  <!-- End for each match -->
  </tbody>
</table>









<table>
  <thead>
    <tr>
      <th>Date time</th>
      <th>Arena name</th>
      <th>Winning faction</th>
	  <th>Appx.MMR</th>
      <th colspan="3"></th>
    </tr>
  </thead>

  <tbody>
    <% @matches.each do |match| %>
      <tr>
        <td><%= match.date_time %></td>
        <td><%= match.arena_name %></td>
        <td><%= match.winning_faction %></td>		
		<% if match.mmr_list.length > 1 %>
			<% mmr_list = match.mmr_list
				mmr_list[0] = '' %>
			<td><%= mmr_list.split(",").map(&:to_i).instance_eval { reduce(:+) / size.to_f.round } %></td>
		<% else %>
			<td>Skirmish</td>
		<% end %>        
      </tr>
	  <tr>
		<td>&nbsp;</td>
		<td>
			<ul><% match.scores.each do |score|
					 if score.player_faction == match.winning_faction %>
						<li><b><%= link_to Player.find(score.player_id).name %>
						<%= Player.find(score.player_id).class_name %>-<%= Player.find(score.player_id).spec_name %>
						KB: <%= score.killing_blows %>
						DMG: <%= score.damage_done %>
						HEAL: <%= score.healing_done %>
						ADJ: <%= score.ratings_adjustment %></b>
						
						
				<% else %>
						<li><%= link_to Player.find(score.player_id).name %>
						<%= Player.find(score.player_id).class_name %>-<%= Player.find(score.player_id).spec_name %>
						KB: <%= score.killing_blows %>
						DMG: <%= score.damage_done %>
						HEAL: <%= score.healing_done %>
						ADJ: <%= score.ratings_adjustment %>
						<% 
							tga = MatchTalentGlyphSelection.find_by(match_id: match.id, player_id: score.player_id)
							if tga
								tg = TalentGlyphSelection.find_by(id: tga.talent_glyph_selection_id)
								if tg
									tg.tal01 != "" ? tstring = tg.tal01 : tstring = ""
									tg.gly01 != "" ? gstring = tg.gly01 : gstring = ""
								end
							end
						%>
						<% if tg %>
						<ul><li><font size="1"><%= tstring %></font></li><li><font size="1"><%= gstring %></font></li></ul></li>
						<% end %>
				<% end %>
			<% end %></ul>
		</td>
	  </tr>
    <% end %>  <!-- End for each match -->
  </tbody>
</table>

<br>

<%= link_to 'New Match', new_match_path %>
</body>